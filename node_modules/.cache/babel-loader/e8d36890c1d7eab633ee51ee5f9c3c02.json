{"ast":null,"code":"var _jsxFileName = \"/Users/tkniranjanbhai/Desktop/React-Course/04-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const userLoggedInInformation = localStorage.getItem('isLoggedIn');\n    if (userLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogOut: logoutHandler\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\n// class App extends React.Component{\n//   constructor(props)\n//   {\n//     super(props);\n//     this.state={\n//       isLoggedIn:false\n//     }\n//     this.loginHandler=this.loginHandler.bind(this);\n//     this.logoutHandler=this.logoutHandler.bind(this);\n//   }\n//   componentDidMount()\n//   {\n//     const userLoggedInInformation=localStorage.getItem('isLoggedIn');\n//     if(userLoggedInInformation==='1')\n//     {\n//       this.setState({isLoggedIn:true});\n//     }\n//   }\n//   loginHandler(email,password)\n//   {\n//     localStorage.setItem('isLoggedIn','1');\n//     this.setState({isLoggedIn:true});\n//   }\n//   logoutHandler()\n//   {\n//     localStorage.removeItem('isLoggedIn');\n//     this.setState({isLoggedIn:false});\n//   }\n//   render(){\n//     return (\n//       <AuthContext.Provider value={{\n//         isLoggedIn:this.state.isLoggedIn,\n//         onLogOut:this.logoutHandler\n//       }}>\n//         <MainHeader/>\n//         <main>\n//           {!this.state.isLoggedIn && <Login onLogin={this.loginHandler} />}\n//           {this.state.isLoggedIn && <Home onLogout={this.logoutHandler} />}\n//         </main>\n//       </AuthContext.Provider>\n//     );\n//   }\n\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","Provider","value","onLogOut","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","_c","$RefreshReg$"],"sources":["/Users/tkniranjanbhai/Desktop/React-Course/04-starting-project/src/App.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(()=>{\n    const userLoggedInInformation=localStorage.getItem('isLoggedIn');\n    if(userLoggedInInformation==='1')\n    {\n      setIsLoggedIn(true);\n    }\n  } ,[]);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn','1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      isLoggedIn:isLoggedIn,\n      onLogOut:logoutHandler\n    }}>\n      <MainHeader/>\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n// class App extends React.Component{\n//   constructor(props)\n//   {\n//     super(props);\n//     this.state={\n//       isLoggedIn:false\n//     }\n//     this.loginHandler=this.loginHandler.bind(this);\n//     this.logoutHandler=this.logoutHandler.bind(this);\n//   }\n//   componentDidMount()\n//   {\n//     const userLoggedInInformation=localStorage.getItem('isLoggedIn');\n//     if(userLoggedInInformation==='1')\n//     {\n//       this.setState({isLoggedIn:true});\n//     }\n//   }\n//   loginHandler(email,password)\n//   {\n//     localStorage.setItem('isLoggedIn','1');\n//     this.setState({isLoggedIn:true});\n//   }\n//   logoutHandler()\n//   {\n//     localStorage.removeItem('isLoggedIn');\n//     this.setState({isLoggedIn:false});\n//   }\n//   render(){\n//     return (\n//       <AuthContext.Provider value={{\n//         isLoggedIn:this.state.isLoggedIn,\n//         onLogOut:this.logoutHandler\n//       }}>\n//         <MainHeader/>\n//         <main>\n//           {!this.state.isLoggedIn && <Login onLogin={this.loginHandler} />}\n//           {this.state.isLoggedIn && <Home onLogout={this.logoutHandler} />}\n//         </main>\n//       </AuthContext.Provider>\n//     );\n//   }\n\n// }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnDC,SAAS,CAAC,MAAI;IACZ,MAAMW,uBAAuB,GAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChE,IAAGF,uBAAuB,KAAG,GAAG,EAChC;MACED,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EACN,MAAMI,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAC,GAAG,CAAC;IACtCP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1BN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;IACrCT,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA,CAACF,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAC3BZ,UAAU,EAACA,UAAU;MACrBa,QAAQ,EAACJ;IACX,CAAE;IAAAK,QAAA,gBACAjB,OAAA,CAACH,UAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACbrB,OAAA;MAAAiB,QAAA,GACG,CAACd,UAAU,iBAAIH,OAAA,CAACL,KAAK;QAAC2B,OAAO,EAAEd;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC/ClB,UAAU,iBAAIH,OAAA,CAACJ,IAAI;QAAC2B,QAAQ,EAAEX;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACc;AAE3B;AAACnB,EAAA,CAjCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAmCZ,eAAeA,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}