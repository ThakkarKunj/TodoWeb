{"ast":null,"code":"var _jsxFileName = \"/Users/tkniranjanbhai/Desktop/React-Course/04-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/inputContext';\nimport { useSelector, useDispatch, useRef } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Signup from './components/SignUp/Signup';\nimport inputContext from './store/inputContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.isAuthenticated);\n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // useEffect(()=>{\n  //   const userLoggedInInformation=localStorage.getItem('isLoggedIn');\n  //   if(userLoggedInInformation==='1')\n  //   {\n  //     setIsLoggedIn(true);\n  //   }\n  // } ,[]);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    // localStorage.setItem('isLoggedIn','1');\n    const user = {\n      email,\n      password\n    };\n    dispatch({\n      type: 'login',\n      user\n    });\n    // setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    // setIsLoggedIn(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Provider value={{\n    //   isLoggedIn:isLoggedIn,\n    //   onLogOut:logoutHandler\n    // }}>\n    // <MainHeader/>\n    //   <main>\n    //     {!isLoggedIn && <Login/>}\n    //     {isLoggedIn && <Home onLogout={logoutHandler} />}\n    //   </main>\n    _jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(inputContext.Provider, {\n          value: {\n            inputRef: useRef(null)\n          },\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"K6lpW3l+Gn9iIfgllKozjI951Sk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\n// class App extends React.Component{\n//   constructor(props)\n//   {\n//     super(props);\n//     this.state={\n//       isLoggedIn:false\n//     }\n//     this.loginHandler=this.loginHandler.bind(this);\n//     this.logoutHandler=this.logoutHandler.bind(this);\n//   }\n//   componentDidMount()\n//   {\n//     const userLoggedInInformation=localStorage.getItem('isLoggedIn');\n//     if(userLoggedInInformation==='1')\n//     {\n//       this.setState({isLoggedIn:true});\n//     }\n//   }\n//   loginHandler(email,password)\n//   {\n//     localStorage.setItem('isLoggedIn','1');\n//     this.setState({isLoggedIn:true});\n//   }\n//   logoutHandler()\n//   {\n//     localStorage.removeItem('isLoggedIn');\n//     this.setState({isLoggedIn:false});\n//   }\n//   render(){\n//     return (\n//       <AuthContext.Provider value={{\n//         isLoggedIn:this.state.isLoggedIn,\n//         onLogOut:this.logoutHandler\n//       }}>\n//         <MainHeader/>\n//         <main>\n//           {!this.state.isLoggedIn && <Login onLogin={this.loginHandler} />}\n//           {this.state.isLoggedIn && <Home onLogout={this.logoutHandler} />}\n//         </main>\n//       </AuthContext.Provider>\n//     );\n//   }\n\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","useSelector","useDispatch","useRef","Switch","Route","Redirect","Signup","inputContext","jsxDEV","_jsxDEV","App","_s","dispatch","isLoggedIn","state","isAuthenticated","loginHandler","email","password","user","type","logoutHandler","localStorage","removeItem","children","exact","path","to","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","inputRef","_c","$RefreshReg$"],"sources":["/Users/tkniranjanbhai/Desktop/React-Course/04-starting-project/src/App.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/inputContext';\nimport {useSelector,useDispatch,useRef} from 'react-redux';\nimport { Switch,Route,Redirect } from 'react-router-dom'\nimport Signup from './components/SignUp/Signup';\nimport inputContext from './store/inputContext';\nfunction App() {\n\n  const dispatch=useDispatch();\n  const isLoggedIn=useSelector(state=>state.isAuthenticated);\n  \n\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // useEffect(()=>{\n  //   const userLoggedInInformation=localStorage.getItem('isLoggedIn');\n  //   if(userLoggedInInformation==='1')\n  //   {\n  //     setIsLoggedIn(true);\n  //   }\n  // } ,[]);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    // localStorage.setItem('isLoggedIn','1');\n    const user={\n      email,\n      password\n    }\n    dispatch({type:'login',user});\n    // setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    // setIsLoggedIn(false);\n  };\n\n  return (\n    // <AuthContext.Provider value={{\n    //   isLoggedIn:isLoggedIn,\n    //   onLogOut:logoutHandler\n    // }}>\n    // <MainHeader/>\n    //   <main>\n    //     {!isLoggedIn && <Login/>}\n    //     {isLoggedIn && <Home onLogout={logoutHandler} />}\n    //   </main>\n    <Switch>\n      <Route exact path='/'>\n        <Redirect to='/login'/>\n      </Route>\n      <Route path='/login'>\n        <Login/>\n      </Route>\n      <Route path='/signup'>\n        <Signup/>\n      </Route>\n      <Route path='/home'>\n      <inputContext.Provider value={{\n        inputRef:useRef(null)\n      }}><Home/></inputContext.Provider>\n\n      </Route>\n    </Switch>\n    \n  );\n}\n\nexport default App;\n// class App extends React.Component{\n//   constructor(props)\n//   {\n//     super(props);\n//     this.state={\n//       isLoggedIn:false\n//     }\n//     this.loginHandler=this.loginHandler.bind(this);\n//     this.logoutHandler=this.logoutHandler.bind(this);\n//   }\n//   componentDidMount()\n//   {\n//     const userLoggedInInformation=localStorage.getItem('isLoggedIn');\n//     if(userLoggedInInformation==='1')\n//     {\n//       this.setState({isLoggedIn:true});\n//     }\n//   }\n//   loginHandler(email,password)\n//   {\n//     localStorage.setItem('isLoggedIn','1');\n//     this.setState({isLoggedIn:true});\n//   }\n//   logoutHandler()\n//   {\n//     localStorage.removeItem('isLoggedIn');\n//     this.setState({isLoggedIn:false});\n//   }\n//   render(){\n//     return (\n//       <AuthContext.Provider value={{\n//         isLoggedIn:this.state.isLoggedIn,\n//         onLogOut:this.logoutHandler\n//       }}>\n//         <MainHeader/>\n//         <main>\n//           {!this.state.isLoggedIn && <Login onLogin={this.loginHandler} />}\n//           {this.state.isLoggedIn && <Home onLogout={this.logoutHandler} />}\n//         </main>\n//       </AuthContext.Provider>\n//     );\n//   }\n\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}