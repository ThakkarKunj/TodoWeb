{"ast":null,"code":"import { legacy_createStore } from 'redux';\nimport { nanoid } from 'nanoid';\nconst initialstate = {\n  todos: [],\n  username: '',\n  isAuthenticated: false,\n  errorMessage: '',\n  id\n};\nconst todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'add-todo') {\n    let updatedTodos = [...state.todos, {\n      text: action.enteredTask,\n      id: nanoid()\n    }];\n    return {\n      ...state,\n      todos: updatedTodos\n    };\n  } else if (action.type === 'remove-todo') {\n    let updatedTodos = state.todos.filter(item => {\n      return item.id !== action.key;\n    });\n    return {\n      ...state,\n      todos: updatedTodos\n    };\n  } else if (action.type === 'logout') {\n    return {\n      isAuthenticated: false,\n      todos: [],\n      username: '',\n      errorMessage: ''\n    };\n  } else if (action.type === 'login') {\n    let user = JSON.parse(localStorage.getItem(action.user.email));\n    if (user) {\n      return {\n        isAuthenticated: true,\n        todos: user.todos,\n        username: user.email,\n        errorMessage: ''\n      };\n    }\n    return {\n      isAuthenticated: false,\n      todos: [],\n      username: '',\n      errorMessage: 'User not found'\n    };\n  } else if (action.type === 'signup') {\n    action.user['todos'] = [];\n    localStorage.setItem(action.user.email, JSON.stringify(action.user));\n    return {\n      isAuthenticated: true,\n      todos: [],\n      username: action.user.email,\n      errorMessage: ''\n    };\n  }\n  return state;\n};\nconst store = legacy_createStore(todoReducer);\nexport default store;","map":{"version":3,"names":["legacy_createStore","nanoid","initialstate","todos","username","isAuthenticated","errorMessage","id","todoReducer","state","arguments","length","undefined","action","type","updatedTodos","text","enteredTask","filter","item","key","user","JSON","parse","localStorage","getItem","email","setItem","stringify","store"],"sources":["/Users/tkniranjanbhai/Desktop/React-Course/04-starting-project/src/store/index.js"],"sourcesContent":["import {legacy_createStore} from 'redux';\nimport {nanoid} from 'nanoid';\nconst initialstate={\n    todos:[],\n    username:'',\n    isAuthenticated:false,\n    errorMessage:'',\n    id\n}\nconst todoReducer=(state=initialstate,action)=>{\n    if(action.type==='add-todo')\n    {\n        let updatedTodos=[...state.todos,{\n            text:action.enteredTask,\n            id:nanoid()\n        }]\n        return{\n            ...state,\n            todos:updatedTodos\n        };\n    }\n    else if(action.type==='remove-todo')\n    {\n        let updatedTodos=state.todos.filter(item=>{\n            return item.id!==action.key;\n        })\n        return{\n            ...state,\n            todos:updatedTodos\n        }\n    }\n    else if(action.type==='logout')\n    {\n        return {\n            isAuthenticated:false,\n            todos:[],\n            username:'',\n            errorMessage:''\n        }\n    }\n    else if(action.type==='login')\n    {\n        let user = JSON.parse(localStorage.getItem(action.user.email))\n        if(user){\n            return {\n                isAuthenticated:true,\n                todos:user.todos,\n                username:user.email,\n                errorMessage:''\n            }\n        }\n        return{\n            isAuthenticated:false,\n            todos:[],\n            username:'',\n            errorMessage:'User not found'\n\n        }\n        \n    }\n    else if(action.type==='signup')\n    {\n        action.user['todos'] = []\n        localStorage.setItem(action.user.email,JSON.stringify(action.user))\n        return {\n            isAuthenticated:true,\n            todos:[],\n            username:action.user.email,\n            errorMessage:''\n        }\n    }\n    return state;\n}\nconst store=legacy_createStore(todoReducer);\n\nexport default store;"],"mappings":"AAAA,SAAQA,kBAAkB,QAAO,OAAO;AACxC,SAAQC,MAAM,QAAO,QAAQ;AAC7B,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC,EAAE;EACRC,QAAQ,EAAC,EAAE;EACXC,eAAe,EAAC,KAAK;EACrBC,YAAY,EAAC,EAAE;EACfC;AACJ,CAAC;AACD,MAAMC,WAAW,GAAC,SAAAA,CAAA,EAA6B;EAAA,IAA5BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACR,YAAY;EAAA,IAACW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxC,IAAGC,MAAM,CAACC,IAAI,KAAG,UAAU,EAC3B;IACI,IAAIC,YAAY,GAAC,CAAC,GAAGN,KAAK,CAACN,KAAK,EAAC;MAC7Ba,IAAI,EAACH,MAAM,CAACI,WAAW;MACvBV,EAAE,EAACN,MAAM;IACb,CAAC,CAAC;IACF,OAAM;MACF,GAAGQ,KAAK;MACRN,KAAK,EAACY;IACV,CAAC;EACL,CAAC,MACI,IAAGF,MAAM,CAACC,IAAI,KAAG,aAAa,EACnC;IACI,IAAIC,YAAY,GAACN,KAAK,CAACN,KAAK,CAACe,MAAM,CAACC,IAAI,IAAE;MACtC,OAAOA,IAAI,CAACZ,EAAE,KAAGM,MAAM,CAACO,GAAG;IAC/B,CAAC,CAAC;IACF,OAAM;MACF,GAAGX,KAAK;MACRN,KAAK,EAACY;IACV,CAAC;EACL,CAAC,MACI,IAAGF,MAAM,CAACC,IAAI,KAAG,QAAQ,EAC9B;IACI,OAAO;MACHT,eAAe,EAAC,KAAK;MACrBF,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC,EAAE;MACXE,YAAY,EAAC;IACjB,CAAC;EACL,CAAC,MACI,IAAGO,MAAM,CAACC,IAAI,KAAG,OAAO,EAC7B;IACI,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACZ,MAAM,CAACQ,IAAI,CAACK,KAAK,CAAC,CAAC;IAC9D,IAAGL,IAAI,EAAC;MACJ,OAAO;QACHhB,eAAe,EAAC,IAAI;QACpBF,KAAK,EAACkB,IAAI,CAAClB,KAAK;QAChBC,QAAQ,EAACiB,IAAI,CAACK,KAAK;QACnBpB,YAAY,EAAC;MACjB,CAAC;IACL;IACA,OAAM;MACFD,eAAe,EAAC,KAAK;MACrBF,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC,EAAE;MACXE,YAAY,EAAC;IAEjB,CAAC;EAEL,CAAC,MACI,IAAGO,MAAM,CAACC,IAAI,KAAG,QAAQ,EAC9B;IACID,MAAM,CAACQ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;IACzBG,YAAY,CAACG,OAAO,CAACd,MAAM,CAACQ,IAAI,CAACK,KAAK,EAACJ,IAAI,CAACM,SAAS,CAACf,MAAM,CAACQ,IAAI,CAAC,CAAC;IACnE,OAAO;MACHhB,eAAe,EAAC,IAAI;MACpBF,KAAK,EAAC,EAAE;MACRC,QAAQ,EAACS,MAAM,CAACQ,IAAI,CAACK,KAAK;MAC1BpB,YAAY,EAAC;IACjB,CAAC;EACL;EACA,OAAOG,KAAK;AAChB,CAAC;AACD,MAAMoB,KAAK,GAAC7B,kBAAkB,CAACQ,WAAW,CAAC;AAE3C,eAAeqB,KAAK"},"metadata":{},"sourceType":"module"}